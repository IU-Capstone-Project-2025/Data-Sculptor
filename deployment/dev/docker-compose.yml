version: '3.8'

services:
  jupyterhub:
    build:
      context: ../../src/services/backend/jupyter_hub
      dockerfile: Dockerfile
    container_name: dev-jupyterhub
    ports:
      - "9000:8000"
    volumes:
      - ../../resources/config/jupyterhub:/srv/jupyterhub:rw
      - ../../src/services/backend/jupyter_hub_adapter_microservice/sendCode.py:/home/developer/sendCode.py:rw #MUST BE ro
      - ../../src/services/backend/syntactic_analyzis_microservice/lsp.py:/home/developer/lsp.py:rw
      - ../../src/services/backend/jupyter_hub/jupyter-lsp-jupyter-server.json:/etc/jupyter/jupyter_server_config.d/jupyter-lsp-jupyter-server.json:rw
      - ../../resources/data/jupyterhub:/home/developer:rw
    environment:
      - LLM_VALIDATOR_URL=http://10.100.30.239:8001
      - URL_STATIC_ANALYZER=http://10.100.30.239:8085
      - URL_LSP_SERVER=http://10.100.30.239:8095
    env_file:
      - ../../resources/config/jupyterhub/.env
  
  deep-syntatic-service:
    build:
      context: ../../src/services/backend/syntactic_analyzis_microservice
      dockerfile: Dockerfile
    container_name: dev-deep-static-analyzer-service
    ports:
      - "8085:8085"
  real-time-analysis-service:
    build:
      context: ../../src/services/backend/real_time_analysis_microservice
      dockerfile: Dockerfile
    container_name: dev-real-time-static-analysis
    ports:
      - "8095:8095"

  mediator:
    build:
      context: ../../src/services/backend/mediator_jupyter_hub_llm_microservice
      dockerfile: Dockerfile
    container_name: dev-mediator
    ports:
      - "8001:8001"
    environment:
      - PYTHONUNBUFFERED=1
      - FEEDBACK_SERVICE_URL=http://10.100.30.239:9352

    volumes:
      - ../../src/services/backend/mediator_jupyter_hub_llm_microservice:/app:rw

  feedback-service:
    build:
      context: ../../src/services/ml
      dockerfile: semantic_feedback/Dockerfile
    container_name: dev-feedback
    ports:
      - "9352:9352"
    env_file:
      - ../../src/services/ml/semantic_feedback/.env
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - ../../src/services/ml/semantic_feedback:/app/semantic_feedback:ro

  adviser-service:
    build:
      context: ../../src/services/ml
      dockerfile: adviser/Dockerfile
    container_name: dev-adviser-chat-service
    ports:
      - "9353:9353"
    env_file:
      - ../../src/services/ml/adviser/.env
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - ../../src/services/ml/adviser:/app/adviser:ro
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:15
    container_name: dev-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: chatdb
    volumes:
      - dev_postgres_data:/var/lib/postgresql/data
      - ./init_scripts:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "app", "-d", "chatdb"]
      interval: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: dev-redis
    ports:
      - "6379:6379"
    volumes:
      - dev_redis_data:/data
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning", "--maxmemory", "512mb", "--maxmemory-policy", "allkeys-lru"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5

volumes:
  dev_postgres_data:
  dev_redis_data: